#!/usr/bin/env python
import math
from FireROOT.Analysis.Events import *
from FireROOT.Analysis.Utils import *

class MyEvents(SignalEvents):
    def __init__(self, files=None, type='MC', maxevents=-1, channel=['2mu2e', '4mu'], **kwargs):
        super(MyEvents, self).__init__(files=files, type=type, maxevents=maxevents, channel=channel, **kwargs)
    def processEvent(self, event, aux):
        if aux['channel'] not in self.Channel: return
        chan = aux['channel']

        gmus = [p for p in event.gens \
            if abs(p.pid)==13 \
                and p.p4.pt()>8\
                and abs(p.p4.eta())<2.4\
                and p.vtx.Rho()<700]
        if len(gmus)<2: return
        
        #pt of dsa
        for i, dsa in enumerate(event.dsamuons):
            if dsa.p4.pt()<5 or abs(dsa.p4.eta())>2.4: continue
            if dsa.p4.pt()>5:
                self.Histos['%s/DsaPt5'%chan].Fill(dsa.p4.pt(), aux['wgt'])
            if dsa.p4.pt()>7:
                self.Histos['%s/DsaPt7'%chan].Fill(dsa.p4.pt(), aux['wgt'])
            if dsa.p4.pt()>10:
                self.Histos['%s/DsaPt10'%chan].Fill(dsa.p4.pt(), aux['wgt'])

            

        #leading pt
        for p in aux['dp']:
            rho = (p.dauvtx-p.vtx).Rho()
            l3d = (p.dauvtx-p.vtx).R()
            daus = []
            for d in event.gens:
                if abs(d.pid) not in [11, 13]: continue
                if (d.vtx-p.dauvtx).R()<1e-2: daus.append(d)
                #if len(daus)==2:
                if abs(d.pid) == 11:
                    self.Histos['{}/leaelpt'.format(chan)].Fill(d.p4.pt())
                    #print 'electron', d.p4.pt()
                elif abs(d.pid) == 13:
                    self.Histos['{}/leamupt'.format(chan)].Fill(d.p4.pt())
            print len(daus)
                    #print 'muon', d.p4.pt()
#                dpmass = (daus[0].p4+daus[1].p4).M()
 #             pairdr = DeltaR(daus[0].p4, daus[1].p4)
  #$              self.Histos['{}/dpmass'.format(chan)].Fill(dpmass)
   #$             if abs(daus[0].pid)==11: # electron pair                                                                                                                                      #$
   #$                 self.Histos['{}/electronpairdr'.format(chan)].Fill(pairdr)
    #            if abs(daus[0].pid)==13: # muon pair                                                                                                                                          #
   #                 self.Histos['{}/muonpairdr'.format(chan)].Fill(pairdr)
#
 #       if len(aux['dp'])==2:
  #          psmass = (aux['dp'][0].p4+aux['dp'][1].p4).M()
   #         dphi = abs(DeltaPhi(aux['dp'][0].p4, aux['dp'][1].p4))
    #        self.Histos['{}/psmass'.format(chan)].Fill(psmass)
     #       self.Histos['{}/dpdphi'.format(chan)].Fill(dphi)
#
 #       muons = [p for p in event.gens if abs(p.pid)==13]
  #      electrons = [p for p in event.gens if abs(p.pid)==11]






        
        #mass of Zd
        for i in range(len(gmus)):
            for j in range(len(gmus)):
                if i!=j: 
                    dr = DeltaR(gmus[i].p4,gmus[j].p4)
                    dphi = abs(DeltaPhi(gmus[i].p4, gmus[j].p4))

        #for lj in ljsourcs
        dp_to_Mu = [p for p in aux['dp'] if p.daupid == 13]
        for dp in dp_to_Mu:
            #print len(dp_to_Mu)
            if dp.p4.pt() < 30 or abs(dp.p4.eta()) > 2.4: continue
            self.Histos['%s/Zd_mass'%chan].Fill((dp.p4.M()), aux['wgt'])

histCollection = [
    {'name': 'DsaPt5','binning': (50, 0.0, 250.0),'title': 'DSA p_{T} >5'},
    {'name': 'DsaPt7','binning': (50, 0.0, 250.0),'title': 'DSA p_{T} >7'},
    {'name': 'DsaPt10','binning': (50, 0.0, 250.0),'title': 'DSA p_{T} >10'},
    {'name': 'Zd_mass','binning': (50, -1.0, 10.0),'title': 'Zdmass'},
    {'name': 'leamupt','binning': (50, 0.0, 1000.0),'title': 'Leading muon p_{T} [GeV];counts/1GeV'},
    {'name': 'leaelpt','binning': (50, 0.0, 1000.0),'title': 'leading ele  p_{T} [GeV];counts/1GeV'},
]
